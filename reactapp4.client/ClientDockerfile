## Use the official Node.js image from Docker Hub
#FROM node:20 AS build
#
## Set the working directory in the container
#WORKDIR /app
#
## Copy the package.json and package-lock.json files
#COPY package*.json ./
#
## Install dependencies
#RUN npm install --legacy-peer-deps
#
## Copy the remaining files
#COPY . ./
#
## Copy certificate files into the container
#COPY ./reactapp4.client.pem /app/reactapp4.client.pem
#COPY ./reactapp4.client.key /app/reactapp4.client.key
#
## Build the React app
#RUN npm run build
#
## Serve the React app using a lightweight web server
#FROM nginx:alpine
#
#COPY --from=build /app/dist /usr/share/nginx/html
#COPY nginx.conf /etc/nginx/conf.d/default.conf
#
#EXPOSE 80
#CMD ["nginx", "-g", "daemon off;"]
# Build stage
FROM node:20 AS build

# Set working directory
WORKDIR /app

# Copy dependencies and install
COPY package*.json ./
RUN npm install --legacy-peer-deps

# Copy all remaining files
COPY . .

# Build the React app
RUN npm run build

# Serve with a lightweight static server
FROM node:20 AS production

# Install serve globally
RUN npm install -g serve

# Set working directory
WORKDIR /app

# Copy built app from build stage
COPY --from=build /app/dist ./dist

# Expose default serve port
EXPOSE 3000

# Run the app
CMD ["serve", "-s", "dist", "-l", "3000"]
